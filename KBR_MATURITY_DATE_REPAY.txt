CREATE DEFINER=`seertree_HR`@`%` PROCEDURE `seertree_HR`.`KBR_MATURITY_DATE_REPAY`(
    IN p_loan_id VARCHAR(20),
    IN p_company_id VARCHAR(20),
    IN p_repayment_type VARCHAR(20),
    IN p_repayment_start_date DATE,
    IN p_number_of_installments INT,
    OUT p_message_text VARCHAR(200)
)
BEGIN
    DECLARE v_repay DATE;
    DECLARE v_schedule_date DATE;
    DECLARE i INT DEFAULT 0;
    DECLARE j INT DEFAULT 0;
    DECLARE done INT DEFAULT 0;
    DECLARE flag  int default 0;

    DECLARE cur CURSOR FOR
        SELECT DISTINCT REPAY_DATE
        FROM KBR_LOAN_DTL
        WHERE LOAN_NUMBER = p_loan_id
        AND COMPANY_CODE = p_company_id
        AND REPAY_DATE IS NOT NULL        
        AND (upper(APPROVAL_STATUS)   in ('APPROVED','Pending')
        OR APPROVAL_STATUS is null);

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    SET p_message_text = '';
    
    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO v_repay;
        IF done THEN
            LEAVE read_loop;
        END IF;

        IF p_repayment_type = 'One-Time' THEN
            IF p_repayment_start_date = v_repay THEN
                SET p_message_text = 'You cannot repay more than once on the same date';  
               set flag=1;
                LEAVE read_loop;
            END IF;
        ELSE
            IF p_repayment_type = 'Quarterly' THEN
                SET j = 3;
            ELSEIF p_repayment_type = 'Semi-Annually' THEN
                SET j = 6;
            ELSEIF p_repayment_type = 'Annually' THEN
                SET j = 12;
            ELSEIF p_repayment_type = 'Monthly' THEN
                SET j = 1;
            ELSE
                LEAVE read_loop; 
            END IF;
          
            SET i = 0;

            repayment_loop: WHILE i < p_number_of_installments DO
                SET v_schedule_date = DATE_ADD(p_repayment_start_date, INTERVAL (i * j) MONTH);
                   select v_schedule_date,v_repay;
                IF v_repay = v_schedule_date THEN
                    SET p_message_text = 'One of the dates in your repayment schedule overlaps with an existing repayment on the same date';
                    LEAVE repayment_loop;    
                   set flag=1;
                END IF;

                SET i = i + 1;
            END WHILE;
        END IF;
    END LOOP;

    CLOSE cur;

    SELECT p_message_text; 
END